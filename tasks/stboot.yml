version: '3'

vars:
  INITRAMFS_INCLUDE: contrib/initramfs-includes
  PROVISIONING_INITRC: out/artifacts/proviso.elv

tasks:
  
  u-root:
    internal: yes
    deps:
      - :check-config
      - :go:u-root
      - :trust-policy
      - :go:checkout-uroot
      - :go:checkout-stboot
    sources:
      - "{{.TRUST_POLICY}}"
      - "{{.ST_HOST_CONFIG_FILE}}"
      - "{{.ST_SIGNING_ROOT}}"
      - "{{.HTTPS_ROOT}}"
      - "cache/go/src/{{.UROOT_REPO}}/**"
      - "cache/go/src/{{.STBOOT_REPO}}/**"
    generates:
      - "{{.OUTPUT}}"
    method: timestamp
    cmds:
      - cmd: echo "Building initramfs via u-root with stboot as init process"
        silent: yes
      - cmd: echo "Including files:"
        silent: yes
      - cmd: for f in {{.FILES}}; do echo "- $f" ; done
        silent: yes
      - >
        {{.GOPREFIX}} {{.GOBIN}}/u-root -build=bb -uinitcmd="stboot {{.ST_STBOOT_ARGS}}" -defaultsh=""
        -uroot-source ./cache/go/src/{{.UROOT_REPO}}
        -o {{.OUTPUT}}.tmp {{.FILES_ARGS}} {{.PKGS_ARGS}}
      - mv {{.OUTPUT}}.tmp {{.OUTPUT}}
    env:
      GO111MODULE: off
    preconditions:
      - sh: "[ -n \"{{.OUTPUT}}\" ]"
        msg: "task bug: OUTPUT not defined"
      - sh: >-
          [ -n "{{.ST_HOST_CONFIG_FILE}}" ]
        msg: |-
          [ERROR] Configuration ST_HOST_CONFIG_FILE not defined in {{.CONFIG}}.
      - sh: >-
          [ -f "{{.ST_HOST_CONFIG_FILE}}" ]
        msg: |-
          [ERROR] Host configuration file {{.ST_HOST_CONFIG_FILE}} missing.
      - sh: "[ -e \"{{.ST_SIGNING_ROOT}}\" ]"
        msg: |-
          [ERROR] root certificate ({{.ST_SIGNING_ROOT}}) missing.
          Please provide a certificate or run "task demo:keygen" to generate example keys.
    status:
      - "{{.CONFIG_HELPER}} initramfs {{.DEPS}}"
      - "[ -f {{.STBOOT_INITRAMFS}} ]"
    run: when_changed
    vars:
      DEPS: >-
        ST_STBOOT_ARGS
        ST_HOST_CONFIG_FILE
      HTTPS_ROOT: contrib/initramfs-includes/isrgrootx1.pem
      FILES: >-
        {{.ST_HOST_CONFIG_FILE}}:etc/host_configuration.json
        {{.TRUST_POLICY}}:etc/trust_policy/trust_policy.json
        {{.ST_SIGNING_ROOT}}:etc/trust_policy/ospkg_signing_root.pem
        {{.HTTPS_ROOT}}:etc/ssl/certs/isrgrootx1.pem
        {{.FILES}}
      FILES_ARGS:
        sh: for f in {{.FILES}}; do echo -n "-files $f "; done
      PKGS_ARGS: >-
        {{.UROOT_REPO}}/cmds/core/init
        {{.STBOOT_REPO}}
        {{.UROOT_PKGS}}
      OUTPUT: "{{.OUTPUT}}"

  initramfs:
    internal: yes
    deps:
      - :check-config
      - task: u-root
        vars:
          OUTPUT: "{{.VARIANT_SRC}}"
    sources:
      - "{{.VARIANT_SRC}}"
    generates:
      - "{{.STBOOT_INITRAMFS}}"
    method: timestamp
    cmds:
      - gzip -kf {{.VARIANT_SRC}}
      - mv {{.VARIANT_SRC}}.gz {{.STBOOT_INITRAMFS}}
    status:
      - '[ -f "{{.STBOOT_INITRAMFS}}" ]'
    run: once
    vars:
      VARIANT: "{{.VARIANT}}"
      VARIANT_SRC: out/artifacts/{{.VARIANT}}.cpio

  initramfs-standard:
    de: "Build an initramfs with stboot as init process"
    cmds:
      - task: initramfs
        vars:
          VARIANT: initramfs-standard
    run: once

# TODO:
# To cover both paths of hostconfig autodetect:
#
# - make a `initramfs-incl-host-config` including
#   {{.ST_HOST_CONFIG_FILE}}:etc/host_configuration.json
#
# - write something in qemu: to preset the OVMF_VARS.fd with host config