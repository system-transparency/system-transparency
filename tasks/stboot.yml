version: '3'

vars:
  INITRAMFS_INCLUDE: contrib/initramfs-includes
  PROVISIONING_INITRC: out/artifacts/proviso.elv
  # WORKAROUND: remove kexec and sluinit from core pkgs to prevent build errors
  UROOT_CORE_PKGS: "{{.UROOT_REPO}}/cmds/core/{basename,bind,blkid,cat,chmod,chroot,cmp,comm,cp,cpio,date,dd,df,dhclient,dirname,dmesg,echo,elvish,false,find,free,fusermount,gpgv,gpt,grep,gzip,hexdump,hostname,hwclock,id,init,insmod,io,ip,kill,lddfiles,ln,lockmsrs,losetup,ls,lsdrivers,lsmod,man,md5sum,mkdir,mkfifo,mknod,mktemp,more,mount,msr,mv,netcat,ntpdate,pci,ping,printenv,ps,pwd,readlink,rm,rmmod,rsdp,scp,seq,shasum,shutdown,sleep,sort,sshd,strace,strings,stty,switch_root,sync,tail,tar,tee,tr,true,truncate,ts,umount,uname,uniq,unmount,unshare,uptime,watchdog,watchdogd,wc,wget,which,yes}"

tasks:
  # internal use only
  u-root:
    label: initramfs
    deps:
      - :check-config
      - :go:u-root
      - :security-config
      - :go:checkout-uroot
      - :go:checkout-stboot
    sources:
      - "{{.SECURITY_CONFIG}}"
      - "{{.ST_HOST_CONFIG_FILE}}"
      - "{{.ST_SIGNING_ROOT}}"
      - "{{.HTTPS_ROOT}}"
      - "cache/go/src/{{.UROOT_REPO}}/**"
      - "cache/go/src/{{.STBOOT_REPO}}/**"
    generates:
      - "{{.OUTPUT}}"
    method: timestamp
    cmds:
      - >
        {{.GOPREFIX}} {{.GOBIN}}/u-root -build=bb -uinitcmd="stboot {{.HOST_CONFIG_ARG}} {{.ST_STBOOT_ARGS}}" -defaultsh=""
        -o {{.OUTPUT}}.tmp {{.FILES_ARGS}} {{.PKGS_ARGS}}
      - mv {{.OUTPUT}}.tmp {{.OUTPUT}}
    env:
      GO111MODULE: off
    preconditions:
      - sh: "[ -n \"{{.OUTPUT}}\" ]"
        msg: "task bug: OUTPUT not defined"
      - sh: >-
          [ "{{.ST_HOST_CONFIG_MODE}}" != "initramfs" ] ||
          [ -n "{{.ST_HOST_CONFIG_FILE}}" ]
        msg: |-
          [ERROR] Configuration ST_HOST_CONFIG_FILE not defined in {{.CONFIG}}.
      - sh: >-
          [ "{{.ST_HOST_CONFIG_MODE}}" != "initramfs" ] ||
          [ -f "{{.ST_HOST_CONFIG_FILE}}" ]
        msg: |-
          [ERROR] Host configuration file {{.ST_HOST_CONFIG_FILE}} missing.
      - sh: "[ -e \"{{.ST_SIGNING_ROOT}}\" ]"
        msg: |-
          [ERROR] root certificate ({{.ST_SIGNING_ROOT}}) missing.
          Please provide a certificate or run "task demo:keygen" to generate example keys.
    status:
      - "{{.CONFIG_HELPER}} initramfs {{.DEPS}}"
      - "[ -f {{.STBOOT_INITRAMFS}} ]"
    run: when_changed
    vars:
      DEPS: >-
        ST_STBOOT_ARGS
        ST_HOST_CONFIG_FILE
        ST_HOST_CONFIG_MODE
        ST_HOST_CONFIG_LOCATION
      HOST_CONFIG_ARG:
        sh: |
          arg="{{.ST_HOST_CONFIG_MODE}}"
          case $arg in
            initramfs)
              echo "-host-config {{.HOST_CONFIG_LOCATION}}"
              ;;
            cdrom)
              echo "-host-config cdrom:{{.HOST_CONFIG_LOCATION}}"
              ;;
            efivar)
              echo "-host-config efivar:{{.HOST_CONFIG_LOCATION}}"
              ;;
            legacy)
              echo "-host-config legacy"
              ;;
            *)
              exit 1
              ;;
          esac
      HTTPS_ROOT: contrib/initramfs-includes/https_roots.pem
      FILE_HOST_CONFIG:
        sh: >-
          [ "{{.ST_HOST_CONFIG_MODE}}" != "initramfs" ] ||
          echo "{{.ST_HOST_CONFIG_FILE}}:{{.HOST_CONFIG_LOCATION}}"
      FILES: >-
        {{.FILE_HOST_CONFIG}}
        {{.SECURITY_CONFIG}}:etc/security_configuration.json
        {{.ST_SIGNING_ROOT}}:etc/ospkg_signing_root.pem
        {{.HTTPS_ROOT}}:etc/https_roots.pem
        {{.FILES}}
      FILES_ARGS:
        sh: for f in {{.FILES}}; do echo -n "-files $f "; done
      PKGS_ARGS: >-
        {{.STBOOT_REPO}}
        {{.PKGS}}
      OUTPUT: "{{.OUTPUT}}"

  initramfs:
    desc: "Build compressed stboot initramfs"
    deps:
      - :check-config
      - task: initramfs-{{.ST_LINUXBOOT_VARIANT}}
    sources:
      - "{{.INITRAMFS_VARIANT}}"
    generates:
      - "{{.STBOOT_INITRAMFS}}"
    method: timestamp
    cmds:
      - gzip -kf {{.INITRAMFS_VARIANT}}
      - mv {{.INITRAMFS_VARIANT}}.gz {{.STBOOT_INITRAMFS}}
    status:
      - "{{.CONFIG_HELPER}} stboot:initramfs {{.DEPS}}"
      - '[ -f "{{.STBOOT_INITRAMFS}}" ]'
    preconditions:
      - sh: "[ -n \"{{.ST_LINUXBOOT_VARIANT}}\" ]"
        msg: "[ERROR] Configuration ST_LINUXBOOT_VARIANT not defined in {{.CONFIG}}"
      - sh: "[ -n \"{{.ST_LINUXBOOT_VARIANT}}\" ] && [ \"minimal\" = \"minimal\" ]"
        msg: "[ERROR] Unknown linuxboot variant: \"{{.ST_LINUXBOOT_VARIANT}}\""
    run: once
    vars:
      INITRAMFS_VARIANT: out/artifacts/initramfs-linuxboot-{{.ST_LINUXBOOT_VARIANT}}.cpio
      DEPS: >-
        ST_LINUXBOOT_VARIANT

  initramfs-minimal:
    cmds:
      - task: u-root
        vars:
          PKGS: >-
            {{.UROOT_REPO}}/cmds/core/init
          OUTPUT: out/artifacts/initramfs-linuxboot-minimal.cpio
    run: once

  initramfs-full:
    deps:
      - :go:cpu
      - :go:checkout-cpu
      - :cpu-sshkeys
    cmds:
      - task: u-root
        vars:
          FILES: >-
            {{.INITRAMFS_INCLUDE}}/netsetup.elv:netsetup.elv
            {{.INITRAMFS_INCLUDE}}/start_cpu.elv:start_cpu.elv
            {{.CPUKEYS_DIR}}/ssh_host_rsa_key:etc/ssh/ssh_host_rsa_key
            {{.CPUKEYS_DIR}}/cpu_rsa.pub:cpu_rsa.pub
          PKGS: >-
            {{.UROOT_CORE_PKGS}}
            github.com/u-root/cpu/cmds/cpud
          OUTPUT: out/artifacts/initramfs-linuxboot-full.cpio
    run: once

  initramfs-debug:
    deps:
      - :go:cpu
      - :go:checkout-cpu
      - :cpu-sshkeys
    cmds:
      - task: u-root
        vars:
          PKGS: >-
            {{.UROOT_CORE_PKGS}}
            github.com/u-root/cpu/cmds/cpud
          FILES: >-
            {{.INITRAMFS_INCLUDE}}/netsetup.elv:netsetup.elv
            {{.INITRAMFS_INCLUDE}}/start_cpu.elv:start_cpu.elv
            {{.CPUKEYS_DIR}}/ssh_host_rsa_key:etc/ssh/ssh_host_rsa_key
            {{.CPUKEYS_DIR}}/cpu_rsa.pub:cpu_rsa.pub
          OUTPUT: out/artifacts/initramfs-linuxboot-debug.cpio
    run: once

  proviso-initrc:
    generates:
      - "{{.PROVISIONING_INITRC}}"
    cmds:
      - cmd: mkdir -p out/artifacts
        silent: true
      - |-
        cat > "{{.PROVISIONING_INITRC}}" <<EOL
        mount -t efivarfs none /sys/firmware/efi/efivars
        stmgr provision hostconfig {{.ST_PROVISO_STMGR_ARGS}}
        shutdown
        EOL
    status:
      - "{{.CONFIG_HELPER}} stboot:proviso-initrc {{.DEPS}}"
      - "[ -f {{.PROVISIONING_INITRC}} ]"
    vars:
      DEPS: >-
        ST_PROVISO_STMGR_ARGS

  provisioning-initramfs:
    desc: "Build compressed stmgr provisioning initramfs"
    deps:
      - :check-config
      - :go:u-root
      - :go:stmgr
      - :go:checkout-uroot
      - proviso-initrc
    sources:
      - ./cache/go/bin/stmgr
      - ./{{.PROVISIONING_INITRC}}
    generates:
      - "{{.PROVISIONING_INITRAMFS}}"
    cmds:
      - cmd: mkdir -p $(dirname {{.PROVISIONING_INITRAMFS}})
        silent: true
      - >
        {{.GOPREFIX}} {{.GOBIN}}/u-root -build=bb
        -o {{.INITRAMFS}} {{.FILES_ARGS}} {{.PKGS_ARGS}}
      - gzip -kf {{.INITRAMFS}}
    env:
      GO111MODULE: off
    preconditions:
      - sh: '[ -n "{{.INITRAMFS}}" ]'
        msg: "task bug: INITRAMFS not defined"
    run: once
    vars:
      INITRAMFS:
        sh: echo {{.PROVISIONING_INITRAMFS}} | sed -e 's/\.gz//'
      PKGS_ARGS: >-
        {{.UROOT_CORE_PKGS}}
      FILES: >-
        cache/go/bin/stmgr:/bin/stmgr
        {{.PROVISIONING_INITRC}}:.elvish/rc.elv
      FILES_ARGS:
        sh: for f in {{.FILES}}; do echo -n "-files $f "; done
