version: '3'

vars:
  INITRAMFS_INCLUDE: contrib/initramfs-includes
  PROVISIONING_INITRC: out/artifacts/proviso.elv
  # WORKAROUND: remove kexec and sluinit from core pkgs to prevent build errors
  UROOT_CORE_PKGS: "{{.UROOT_REPO}}/cmds/core/{basename,bind,blkid,cat,chmod,chroot,cmp,comm,cp,cpio,date,dd,df,dhclient,dirname,dmesg,echo,elvish,false,find,free,fusermount,gpgv,gpt,grep,gzip,hexdump,hostname,hwclock,id,init,insmod,io,ip,kill,lddfiles,ln,lockmsrs,losetup,ls,lsdrivers,lsmod,man,md5sum,mkdir,mkfifo,mknod,mktemp,more,mount,msr,mv,netcat,ntpdate,pci,ping,printenv,ps,pwd,readlink,rm,rmmod,rsdp,scp,seq,shasum,shutdown,sleep,sort,sshd,strace,strings,stty,switch_root,sync,tail,tar,tee,tr,true,truncate,ts,umount,uname,uniq,unmount,unshare,uptime,watchdog,watchdogd,wc,wget,which,yes}"

tasks:
  # internal use only
  u-root:
    label: initramfs
    deps:
      - :check-config
      - :go:u-root
      - :security-config
      - :go:checkout-uroot
      - :go:checkout-stboot
    sources:
      - "{{.SECURITY_CONFIG}}"
      - "{{.ST_HOST_CONFIG_FILE}}"
      - "{{.ST_SIGNING_ROOT}}"
      - "{{.HTTPS_ROOT}}"
      - "cache/go/src/{{.UROOT_REPO}}/**"
      - "cache/go/src/{{.STBOOT_REPO}}/**"
    generates:
      - "{{.OUTPUT}}"
    method: timestamp
    cmds:
      - >
        {{.GOPREFIX}} {{.GOBIN}}/u-root -build=bb -uinitcmd="stboot {{.ST_STBOOT_ARGS}}" -defaultsh=""
        -uroot-source ./cache/go/src/{{.UROOT_REPO}}
        -o {{.OUTPUT}}.tmp {{.FILES_ARGS}} {{.PKGS_ARGS}}
      - mv {{.OUTPUT}}.tmp {{.OUTPUT}}
    env:
      GO111MODULE: off
    preconditions:
      - sh: "[ -n \"{{.OUTPUT}}\" ]"
        msg: "task bug: OUTPUT not defined"
      - sh: >-
          [ -n "{{.ST_HOST_CONFIG_FILE}}" ]
        msg: |-
          [ERROR] Configuration ST_HOST_CONFIG_FILE not defined in {{.CONFIG}}.
      - sh: >-
          [ -f "{{.ST_HOST_CONFIG_FILE}}" ]
        msg: |-
          [ERROR] Host configuration file {{.ST_HOST_CONFIG_FILE}} missing.
      - sh: "[ -e \"{{.ST_SIGNING_ROOT}}\" ]"
        msg: |-
          [ERROR] root certificate ({{.ST_SIGNING_ROOT}}) missing.
          Please provide a certificate or run "task demo:keygen" to generate example keys.
    status:
      - "{{.CONFIG_HELPER}} initramfs {{.DEPS}}"
      - "[ -f {{.STBOOT_INITRAMFS}} ]"
    run: when_changed
    vars:
      DEPS: >-
        ST_STBOOT_ARGS
        ST_HOST_CONFIG_FILE
      HTTPS_ROOT: contrib/initramfs-includes/https_roots.pem
      FILES: >-
        {{.ST_HOST_CONFIG_FILE}}:etc/host_configuration.json
        {{.SECURITY_CONFIG}}:etc/security_configuration.json
        {{.ST_SIGNING_ROOT}}:etc/ospkg_signing_root.pem
        {{.HTTPS_ROOT}}:etc/https_roots.pem
        {{.FILES}}
      FILES_ARGS:
        sh: for f in {{.FILES}}; do echo -n "-files $f "; done
      PKGS_ARGS: >-
        {{.STBOOT_REPO}}
        {{.PKGS}}
      OUTPUT: "{{.OUTPUT}}"

  initramfs:
    desc: "Build compressed stboot initramfs"
    deps:
      - :check-config
      - task: initramfs-{{.VARIANT}}
    sources:
      - "{{.VARIANT_SRC}}"
    generates:
      - "{{.STBOOT_INITRAMFS}}"
    method: timestamp
    cmds:
      - gzip -kf {{.VARIANT_SRC}}
      - mv {{.VARIANT_SRC}}.gz {{.STBOOT_INITRAMFS}}
    status:
      #- "{{.CONFIG_HELPER}} stboot:initramfs {{.DEPS}}"
      - '[ -f "{{.STBOOT_INITRAMFS}}" ]'
    preconditions:
      #- sh: "[ -n \"{{.ST_SOME_OPTION_IN_ST_CONFIG}}\" ]"
      #  msg: "[ERROR] Configuration ST_SOME_OPTION_IN_ST_CONFIG not defined in {{.CONFIG}}"
    run: once
    vars:
      VARIANT: standard
      VARIANT_SRC: out/artifacts/initramfs-linuxboot-{{.VARIANT}}.cpio
      #DEPS: >-
      # ST_SOME_OPTION_IN_ST_CONFIG

  initramfs-standard:
    cmds:
      - task: u-root
        vars:
          PKGS: >-
            {{.UROOT_REPO}}/cmds/core/init
          OUTPUT: out/artifacts/initramfs-linuxboot-standard.cpio
    run: once

  proviso-initrc:
    generates:
      - "{{.PROVISIONING_INITRC}}"
    cmds:
      - cmd: mkdir -p out/artifacts
        silent: true
      - |-
        cat > "{{.PROVISIONING_INITRC}}" <<EOL
        try {
          mount -t efivarfs none /sys/firmware/efi/efivars
        } except e {
          echo "failed to mount efivarfs, probably already mounted"
        }
        stmgr provision hostconfig {{.ST_PROVISO_STMGR_ARGS}}
        shutdown
        EOL
    status:
      - "{{.CONFIG_HELPER}} stboot:proviso-initrc {{.DEPS}}"
      - "[ -f {{.PROVISIONING_INITRC}} ]"
    vars:
      DEPS: >-
        ST_PROVISO_STMGR_ARGS

  provisioning-initramfs:
    desc: "Build compressed stmgr provisioning initramfs"
    deps:
      - :check-config
      - :go:u-root
      - :go:stmgr
      - :go:checkout-uroot
      - proviso-initrc
    sources:
      - ./cache/go/bin/stmgr
      - ./{{.PROVISIONING_INITRC}}
    generates:
      - "{{.PROVISIONING_INITRAMFS}}"
    cmds:
      - cmd: mkdir -p $(dirname {{.PROVISIONING_INITRAMFS}})
        silent: true
      - >
        {{.GOPREFIX}} {{.GOBIN}}/u-root -build=bb
        -uroot-source ./cache/go/src/{{.UROOT_REPO}}
        -o {{.INITRAMFS}} {{.FILES_ARGS}} {{.PKGS_ARGS}}
      - gzip -kf {{.INITRAMFS}}
    env:
      GO111MODULE: off
    preconditions:
      - sh: '[ -n "{{.INITRAMFS}}" ]'
        msg: "task bug: INITRAMFS not defined"
    run: once
    vars:
      INITRAMFS:
        sh: echo {{.PROVISIONING_INITRAMFS}} | sed -e 's/\.gz//'
      PKGS_ARGS: >-
        {{.UROOT_CORE_PKGS}}
      FILES: >-
        cache/go/bin/stmgr:/bin/stmgr
        {{.PROVISIONING_INITRC}}:.elvish/rc.elv
      FILES_ARGS:
        sh: for f in {{.FILES}}; do echo -n "-files $f "; done
