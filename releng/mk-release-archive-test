#! /bin/bash

# Script to populate a git repo with a signed release tag, and test
# packaging using mk-release-archive.

set -eu

# Change directory to where script is located.
cd "$(dirname "$0")"

die() {
    echo "$@"
    exit 1
}

rm -rf test-tmp
mkdir test-tmp
cd test-tmp

ssh-keygen -q -N '' -t ed25519 -f testkey
echo 'rjh@example.org namespaces="git,file" '"$(< testkey.pub)" > allowed_signers

# Populate a repo
git init foo-project
(
    cd foo-project
    git config --local gpg.format ssh
    git config --local user.signingkey "$(realpath ../testkey)"
    echo "Test component" > README
    git add README
    git commit -S -m "First revision"
    git tag -s -m "Release v0.1" v0.1
)

{
    echo collection: test-0.1
    echo component: file://$(realpath foo-project) v0.1 $(cd foo-project && git show -s --format='tformat:%H' HEAD)
} > foo-manifest

echo "New stuff" > NEWS

../mk-release-archive.sh foo-manifest NEWS

tar -tzf test-0.1.tar.gz | grep -q '^test-0.1/foo-project/README' || die "FAIL: README file missing in archive"
tar -tzf test-0.1.tar.gz | grep -q '^test-0.1/manifest' || die "FAIL: manifest file missing in archive"
tar -tzf test-0.1.tar.gz | grep -q '^test-0.1/NEWS' || die "FAIL: NEWS file missing in archive"

! ../mk-release-archive.sh -o test-expect-fail -a /dev/null foo-manifest || die "FAIL: Signatures not enforced"

# Test with -f, and also test passing an absolute filename with -o.
../mk-release-archive.sh -f -o "$(pwd)/test-unsigned" -a /dev/null foo-manifest || die "FAIL: -f (force) not working"

tar -tzf test-unsigned.tar.gz | grep -q '^test-unsigned/foo-project/README' || die "FAIL: README file missing in (forced) archive"
