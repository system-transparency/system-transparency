# System Transparency build configuration.

# This file is sourced by other shell scripts, possibly run by /bin/sh
# (which might not be bash, nor dash).

##############################################################################
# Tooling
#
# Following configuration is used during the installation of the tools.
##############################################################################

# ST_UROOT_VERSION defines the branch, tag or commit for u-root, using the
# upstream u-root repository: https://github.com/u-root/u-root
#
ST_UROOT_VERSION=78ac944

# ST_STBOOT_VERSION defines the branch, tag or commit for stboot and stmanager,
# using the custom repository: https://github.com/system-transparency/stboot
#
ST_STBOOT_VERSION=4a8e038


##############################################################################
# stboot installation image
#
# Following options controls the creation of the stboot installation image. 
# This includes the LinuxBoot kernel and initramfs, the host- and security
# configuration files and further files and paramters.
##############################################################################

# ST_LINUXBOOT_KERNEL_VERSION defines the linux kernel version of the LinuxBoot
# distribution.
#
ST_LINUXBOOT_KERNEL_VERSION=5.10.21

# ST_LINUXBOOT_KERNEL_CONFIG is the linux kernel defconfig loaded before
# the kernel is beeing built.
#
ST_LINUXBOOT_KERNEL_CONFIG="contrib/linuxboot.defconfig"

# ST_INSTALLATION_OPTION determines the installation artifacts according to the
# scenario stboot is built for. Valid values are mbr, efi and coreboot.
#
# mbr: For leased server with different / unknown firmware (lagacy BIOS or UEFI).
# Syslinux is used as an intermedeate bootloader. There is both, valid boot
# code in the MBR (for legacy systems) and a .efi file on the first partition
# (for EFI systems) to load stboot. The disadvantage is that there is no
# guarantied TPM measurement of the stboot code in the installation option.
#
# efi: For closed source UEFI firmware which cannot easily be modified. 
# The Linux EFI stub kernel feature is used to compile the kernel as an EFI
# application. The idea is to take advantage of the TPM measurements done by
# the efi firmware. stboot (kernel + initramfs compiled into this kernel) is 
# build as an EFI executable / efi application in this installation option.
# The efi firmware measures this file before execution (even with secure boot
# disabled in our tests).
#
# coreboot: NOT SUPPORTED YET
ST_INSTALLATION_OPTION=mbr

# ST_LINUXBOOT_VARIANT determines the content of the initramfs. Possible values
# are: minimal, debug and full.
#
# minimal: The only executables included in the initramfs are its init routine
# and the stboot binary.
#
# debug: in addition to minimal it includes a shell(elvish), the cpud command
# from the u-root repositore for debugging, a elvish script to bring up
# network, keys used with cpud and a elvish script to launch a remote debugging
# session via cpud.
#
# full: in addition to debug all core utilities of u-root.
#
ST_LINUXBOOT_VARIANT=minimal

# ST_LINUXBOOT_CMDLINE controls the kernel cmdline of the linuxboot kernel.
# Flags to stboot can be passed via uroot.uinitargs here as well.
# ST_LINUXBOOT_CMDLINE uses the same format as the kernel config CONFIG_CMDLINE.
# for more information see:
# https://www.kernel.org/doc/html/latest/admin-guide/kernel-parameters.html
#
ST_LINUXBOOT_CMDLINE="console=ttyS0,115200 uroot.uinitargs=\"-debug\""

# ST_SIGNING_ROOT is the path to a PEM encoded root certificate used for
# signature verification of the OS packages. The root certificate is included
# into the LinuxBoot initramfs.
ST_SIGNING_ROOT="out/keys/example_keys/root.cert"

# ST_NUM_SIGNATURES defines the minimum number of signatures that must be valid
# in order to boot the operation system. The value is saved in the security
# configuration file inside the LinuxBoot initramfs.
#
ST_NUM_SIGNATURES=2

# ST_BOOT_MODE controlls wether the OS package is loaded from the network
# or from local storage. The value is saved in the security configuration file
# inside the LinuxBoot initramfs.
#
#ST_BOOT_MODE=network
ST_BOOT_MODE=local


# ST_LOCAL_OSPKG_DIR chooses the directory location of the OS Packages. Only
# relevant if ST_BOOT_MODE=local. The path should contain at least one OS package
# archive file (ZIP) and descriptor file (JSON). In addition it is required to
# provide a "boot_order" with the OS package's archive file listed in it.
ST_LOCAL_OSPKG_DIR="out/ospkgs"

#ST_USE_PKG_CACHE controlls wether OS packages loaded via network will be 
# cached on the data partition. Only relevant if ST_BOOT_MODE=network.
# The value is saved in the security configuration file inside the LinuxBoot
# initramfs.
#
ST_USE_PKG_CACHE=false

# ST_PROVISIONING_SERVER_URL is a list of provisioning server URLs
# which determines where OS package descriptor JSON file is being fetched from. 
# Example: ("http://a.server.com" "https://b.server.com"). The URL of the of
# of the OS package archive file is stored in the OS package descriptor JSON file.
# The value is saved in the host configuration file on stboot installation image.
#
ST_PROVISIONING_SERVER_URL="http://10.0.2.2:8080/os-pkg-example-ubuntu20.json"

# The following values are saved in the host configuration file on the stboot
# installation image. They are used for the network setup of the host in case 
# boot mode is set to 'network'.
# DNS setting is optional, if unset 8.8.8.8 is used.
# Valid network modes are 'static' or 'dhcp'
# This are default QEMU static network settings:
#

# ST_NETWORK_MODE defines the network setup.
# Valid network modes are 'static' or 'dhcp'
# Used for the network setup of the host in case ST_BOOT_MODE is set to 'network'.
# The value is saved in the host configuration file on stboot installation image.
#
ST_NETWORK_MODE="dhcp"

# ST_HOST_NETWORK_INTERFACE is optional and defines a specific network interface
# to use for the network setup identified by its MAC address in IEEE 802 MAC-48,
# EUI-48, EUI-64 format. If empty, the first successfully working interface will
# be used.
# Used for the network setup of the host in case ST_BOOT_MODE is set to 'network'.
# The value is saved in the host configuration file on stboot installation image.
#
#ST_HOST_NETWORK_INTERFACE=""

# ST_HOST_IP sets the ip address and netmask of the host in CIDR notation.
# Used for the network setup of the host in case ST_BOOT_MODE is set to 'network'
# and ST_NETWORK_MODE is set to 'static'.
# The value is saved in the host configuration file on stboot installation image.
#
#ST_HOST_IP="10.0.2.15/24"

# ST_HOST_GATEWAY sets the default gateway of the host.
# Used for the network setup of the host in case ST_BOOT_MODE is set to 'network'
# and ST_NETWORK_MODE is set to 'static'.
# The value is saved in the host configuration file on stboot installation image.
#
#ST_HOST_GATEWAY="10.0.2.2"

# ST_HOST_DNS setting is optional, if unset 8.8.8.8 is used.
# Used for the network setup of the host in case ST_BOOT_MODE is set to 'network'.
# The value is saved in the host configuration file on stboot installation image.
#
#ST_HOST_DNS=""

# ST_DATA_PARTITION_EXTRA_SPACE defines additional storage space of the data
# partition in bytes.
# Suffixes like 'K', 'M', 'G', 'T' are supported. (case insensitive)
# A minimum of 100M is recommended. (corresponds to 100 MiB). When using
# network boot mode and caching OS packages is enabled, it is recommended to 
# increase this value in order to have enough space to store an OS package.
#
ST_DATA_PARTITION_EXTRA_SPACE="100M"
