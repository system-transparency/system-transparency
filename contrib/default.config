# System Transparency build configuration.

# This file is sourced by other shell scripts, possibly run by /bin/sh
# (which might not be bash, nor dash).

##############################################################################
# Tooling
#
# Following configuration is used during the installation of the tools.
##############################################################################

# Since u-root does not support go modules yet and by default the insatllation
# uses code from the master branch, ST_UROOT_DEV_BRANCH is checked out after 
# downloading source code and before installation.
# 
ST_UROOT_DEV_BRANCH=stboot


##############################################################################
# stboot installation Bootloader - common
#
# Following options controls the creation of the stboot installation image. 
# This includes the LinuxBoot kernel and initramfs, the host- and security
# configuration files and further files and paramters.
##############################################################################

# ST_KERNEL_VERSION_XX defines the linux kernel version of the LinuxBoot
# distribution for the appropriate installation option.
#
ST_KERNEL_VERSION=5.10.21
#ST_MBR_BOOTLOADER_KERNEL_VERSION=
#ST_EFI_APPLICATION_EFISTUB_KERNEL_VERSION=

# ST_XX_KERNEL_CONFIG is the linux kernel defconfig loaded before
# the kernel is beeing built for the appropiate installation option.
#
ST_MBR_BOOTLOADER_KERNEL_CONFIG="contrib/boards/${BOARD}/mbr_linuxboot.defconfig"
ST_EFI_APPLICATION_EFISTUB_KERNEL_CONFIG="contrib/boards/${BOARD}/efi_linuxboot.defconfig"

# ST_LINUXBOOT_VARIANT determines the content of the initramfs. Possible values
# are: minimal, debug and full.
#
# minimal: The only executables included in the initramfs are its init routine
# and the stboot binary.
#
# debug: in addition to minimal it includes a shell(elvish), the cpud command
# from the u-root repositore for debugging, a elvish script to bring up
# network, keys used with cpud and a elvish script to launch a remote debugging
# session via cpud.
#
# full: in addition to debug all core utilities of u-root.
#
ST_LINUXBOOT_VARIANT=minimal

# ST_LINUXBOOT_CMDLINE controls the kernel cmdline of the linuxboot kernel.
# Flags to stboot can be passed via uroot.uinitargs here as well.
# ST_LINUXBOOT_CMDLINE uses the same format as the kernel config CONFIG_CMDLINE.
# for more information see:
# https://www.kernel.org/doc/html/latest/admin-guide/kernel-parameters.html
#
ST_LINUXBOOT_CMDLINE="console=ttyS0,115200 uroot.uinitargs=\"-debug\""

# ST_SIGNING_ROOT is the path to a PEM encoded root certificate used for
# signature verification of the OS packages. The root certificate is included
# into the LinuxBoot initramfs.
ST_SIGNING_ROOT="out/keys/signing_keys/root.cert"

# ST_NUM_SIGNATURES defines the minimum number of signatures that must be valid
# in order to boot the operation system. The value is saved in the security
# configuration file inside the LinuxBoot initramfs.
#
ST_NUM_SIGNATURES=2

# ST_BOOT_MODE controlls wether the OS package is loaded from the network
# or from local storage. The value is saved in the security configuration file
# inside the LinuxBoot initramfs.
#
#ST_BOOT_MODE=network
ST_BOOT_MODE=local

#ST_USE_PKG_CACHE controlls wether OS packages loaded via network will be 
# cached on the data partition. Only relevant if ST_BOOT_MODE=network.
# The value is saved in the security configuration file inside the LinuxBoot
# initramfs. 
#
ST_USE_PKG_CACHE=false

# ST_PROVISIONING_SERVER_URL is a list of provisioning server URLs
# which determines where OS package descriptor JSON file is being fetched from. 
# Example: ("http://a.server.com" "https://b.server.com"). The URL of the of
# of the OS package archive file is stored in the OS package descriptor JSON file.
# The value is saved in the host configuration file on stboot installation image.
ST_PROVISIONING_SERVER_URL=

# The following values are saved in the host configuration file on the stboot
# installation image. They are used for the network setup of the host in case 
# boot mode is set to 'network'.
# DNS setting is optional, if unset 8.8.8.8 is used.
# Valid network modes are 'static' or 'dhcp'
# This are default QEMU static network settings:
#
ST_NETWORK_MODE="static"
ST_HOST_IP="10.0.2.15/24"
ST_HOST_GATEWAY="10.0.2.2/24"
ST_HOST_DNS=""

# ST_DATA_PARTITION_EXTRA_SPACE defines additional storage space of the data
# partition in bytes.
# Suffixes like 'K', 'M', 'G', 'T' are supported. (case insensitive)
# A minimum of 100M is recommended. (corresponds to 100 MiB). When using
# network boot mode and caching OS packages is enabled, it is recommended to 
# increase this value in order to have enough space to store an OS package.
#
ST_DATA_PARTITION_EXTRA_SPACE="100M"


##############################################################################
# OS packages 
#
# The following configuration options are used while creating the
# (default / example) OS package using 'make'.
# They are passed to the stmanager utility which you can also use directly to 
# create more customized OS packges.
##############################################################################

# ST_OS_PKG_LABEL describes the OS package, e.g. it is displayed at boot time.
# It is saved in manifest.json in the OS-package ZIP archive.
#
ST_OS_PKG_LABEL="System Transparency Test OS"

# ST_OS_PKG_URL is the URL of the OS package. This URL is stored in the
# OS package descriptor JSON file. In network boot mode, the descriptor
# is loaded from the provisioning URL set in the host_configuration of the
# stboot installation image. The OS package zip archive the then loaded 
# from this URL.
#
ST_OS_PKG_URL=""

# ST_OS_PKG_CMDLINE is the kernel command line of the operating system. It is
# saved in manifest.json in the OS-package ZIP archive. 
#
ST_OS_PKG_CMDLINE="console=tty0 console=ttyS0,115200n8 rw rdinit=/lib/systemd/systemd"

# ST_OS_PKG_KERNEL is the path to the operating system's linux kernel.
# It will be packed into the OS package ZIP archive.
#
ST_OS_PKG_KERNEL="out/operating-system/ubuntu-bionic-amd64.vmlinuz"
#ST_OS_PKG_KERNEL="out/operating-system/ubuntu-focal-amd64.vmlinuz"
#ST_OS_PKG_KERNEL="out/operating-system/debian-buster-amd64.vmlinuz"

# ST_OS_PKG_INITRAMFS path to the OS's initramfs. It must contain the complete OS
# since there will be no further root filesystem on disc to be loaded.
# It will be packed into the OS package ZIP archive.
#
ST_OS_PKG_INITRAMFS="out/operating-system/ubuntu-bionic-amd64.cpio.gz"
#ST_OS_PKG_INITRAMFS="out/operating-system/ubuntu-focal-amd64.cpio.gz"
#ST_OS_PKG_INITRAMFS="out/operating-system/debian-buster-amd64.cpio.gz"

# ST_OS_PKG_TBOOT is the path to the tboot kernel to be used with the OS package.
# It is optional to include tboot into OS packages and it can be used und hosts
# that support Intel TXT only. It will be packed into the OS package ZIP archive.
#
ST_OS_PKG_TBOOT="out/tboot/tboot.gz"

# ST_OS_PKG_TBOOT_ARGS is the tboot kernel's command line. It is saved in
# manifest.json in the OS-package ZIP archive.
#
ST_OS_PKG_TBOOT_ARGS=""

# ST_OS_PKG_ACM is the path to an authenticated code module (ACM) or to a
# directory containing multiple ACMs. All ACMs will be present in the OS package
# and tboot will pick the right one for the host. It will be packed into the OS
# package ZIP archive.
#
ST_OS_PKG_ACM="cache/ACMs/"


##############################################################################
# Testing
##############################################################################

# ST_QEMU_MEM is the amount of RAM for qemu tests in megabytes.
#
ST_QEMU_MEM=4096
