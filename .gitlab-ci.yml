stages:
    - environment
    - test
default:
    image: ubuntu:22.10
    before_script:
        - export DEBIAN_FRONTEND=noninteractive 
        # Install utils
        - apt-get update > /dev/null
        - apt-get install -qqy curl wget tree xxd gettext-base > /dev/null
        # Install go
        - wget -q https://go.dev/dl/go1.19.8.linux-amd64.tar.gz
        - rm -rf /usr/local/go && tar -C /usr/local -xzf go1.19.8.linux-amd64.tar.gz
        - export PATH=$PATH:/usr/local/go/bin
        # Install task
        - sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
        # Install QEMU
        - apt-get -qqy install qemu-system-x86 > /dev/null
        # Install Toolchain dependencies
        - task deps:install > /dev/null
        # Install test-only tools
        - pip install --user virt-firmware

        - task --version
        - go version

Example keys & OS package:
    stage: environment
    script:
        # Download example OS artifacts
        - mkdir -p cache/debos
        - cd cache/debos
        - curl -LO https://github.com/system-transparency/example-os/releases/download/v0.1/ubuntu-focal-amd64.cpio.gz
        - curl -LO https://github.com/system-transparency/example-os/releases/download/v0.1/ubuntu-focal-amd64.vmlinuz
        - cd ../../
        # Generate and sign OS Package
        - task demo:ospkg

        - tree --du -h cache/go/bin/
        - tree --du -h out/
    artifacts:
        paths: 
            - cache/go/bin/
            - out/

# Will not work anymore (ST_PROVISO_STMGR_ARGS is gone). Also provision sub-command is deprecated.
# Develop an nicer way to preset QEMU with efivars.
#ISO image - network mode - hostcfg from efivar:
#    stage: test
#    script:
#        - tree  -L 2 cache
#        - tree -L 2 out
#        # Set host config file location to efivar
#        - sed -i '/^ST_HOST_CONFIG_LOCATION=.*/d' st.config
#        - sed -i '/^ST_PROVISO_STMGR_ARGS=.*/d' st.config
#        - echo 'ST_HOST_CONFIG_LOCATION="efivar"' >> st.config
#        - echo 'ST_PROVISO_STMGR_ARGS="-efi -version 1 -addrMode dhcp -urls http://10.0.2.2:8080/os-pkg-example-ubuntu20.json"' >> st.config
#        # Build provisioning iso and network efivar images
#        - task proviso
#        - task iso
#        # Start http server to serve OS Package
#        - task demo:server &
#        # Boot stboot iso in network efivar mode using QEMU
#        - task qemu:proviso
#        - ci-scripts/test-qemu.sh iso

variables:
  # keep in sync with tasks/qemu.yml
  OVMF_VARS_SOURCE_PATH: /usr/share/OVMF/OVMF_VARS.fd
  OVMF_VARS_PATH: out/artifacts/OVMF_VARS.fd
  HOSTCFG_PATH: out/artifacts/host_config.json

  # keep in sync with stboot source (host/configautodetect.go)
  HOSTCFG_VAR_NAME: STHostConfig
  HOSTCFG_VAR_GUID: f401f2c1-b005-4be0-8cee-f2e5945bcbe7

ISO image - network mode - hostcfg from efivars:
  stage: test
  environment:
  script:
    # prepare the efi var file
    - task iso-no-hostcfg
    - |
      HOSTCFG_TEMP_PATH=$(mktemp st.test.XXXXXXXXXX.json)
      HOSTCFG_VAR_DATA=$(xxd -g 0 "$HOSTCFG_PATH" | cut -d ' ' -f 2 | tr -d '\n')

      envsubst <<EOF > "$HOSTCFG_TEMP_PATH"
      {
        "version": 2,
        "variables": [{
          "name": "$HOSTCFG_VAR_NAME",
          "guid": "$HOSTCFG_VAR_GUID",
          "attr": 39,
          "data": "$HOSTCFG_VAR_DATA"
        }]
      }
      EOF

      $HOME/.local/bin/virt-fw-vars \
        --set-json "$HOSTCFG_TEMP_PATH" \
        -i "$OVMF_VARS_SOURCE_PATH" \
        -o "$OVMF_VARS_PATH"

      rm "$HOSTCFG_TEMP_PATH"

    # Run ST in QEMU
    - ci-scripts/test-qemu.sh iso

ISO image - network mode - hostcfg from initramfs:
    stage: test
    script:
      # Build iso
      - task iso
      - cp "$OVMF_VARS_SOURCE_PATH" "$OVMF_VARS_PATH"

      # Run ST in QEMU
      - ci-scripts/test-qemu.sh iso
